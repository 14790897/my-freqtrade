name: Freqtrade CI

on:
  push:
    branches:
      - stable
      - develop
      - ci/*
    tags:
  release:
    types: [published]
  pull_request:
  schedule:
    - cron: "0 3 * * 4"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}"
  cancel-in-progress: true
permissions:
  repository-projects: read
jobs:
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04", "ubuntu-24.04"]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache_dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/dependencies/
          key: ${{ runner.os }}-dependencies

      - name: pip cache (linux)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-ubuntu

      - name: Backtesting (multi)
        run: |
          cp tests/testdata/config.tests.json config.json
          freqtrade create-userdir --userdir user_data
          freqtrade new-strategy -s AwesomeStrategy
          freqtrade new-strategy -s AwesomeStrategyMin --template minimal
          freqtrade backtesting --datadir tests/testdata --strategy-list AwesomeStrategy AwesomeStrategyMin -i 5m

      - name: Hyperopt
        run: |
          cp tests/testdata/config.tests.json config.json
          freqtrade create-userdir --userdir user_data
          freqtrade hyperopt --datadir tests/testdata -e 6 --strategy SampleStrategy --hyperopt-loss SharpeHyperOptLossDaily --print-all

  deploy-docker:
    needs:
      [
        build-linux,
        build-macos,
        build-windows,
        docs-check,
        mypy-version-check,
        pre-commit,
      ]
    runs-on: ubuntu-22.04

    if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'release') && github.repository == 'freqtrade/freqtrade'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Extract branch name
        id: extract-branch
        run: |
          echo "GITHUB_REF='${GITHUB_REF}'"
          echo "branch=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Dockerhub login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

      # We need docker experimental to pull the ARM image.
      - name: Switch docker to experimental
        run: |
          docker version -f '{{.Server.Experimental}}'
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          docker version -f '{{.Server.Experimental}}'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build and test and push docker images
        env:
          BRANCH_NAME: ${{ steps.extract-branch.outputs.branch }}
        run: |
          build_helpers/publish_docker_multi.sh
